What happens when you initialize a repository? Why do you need to do it?

It creates a .git folder which is usually hidden. You need it because only after initializing it will be called a repository which can be operated on.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It is an intermediatary place where files are put. This allows me to commit one logical change at once I think.
Most probably this answer is gonna change.

How can you use the staging area to make sure you have one commit per logical
change?

Make sure that you add only one logical change to the staging area and commit and then do that again. 
You can make sure of your changes by `git diff` `git diff --staged`

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

To try an experimental feature which you don't know it's work out or To have an other complete version of the existing master branch.

How do the diagrams help you visualize the branch structure?

They help me organize the projects. They make the job kind of easy. 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

It's like adding two different features. It's intuitive.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

You may also want to commit your changes to the file. When you're ready to move on, click "Next" to hear from Jeffrey again about how he uses some of the tools you've learned about in this lesson.